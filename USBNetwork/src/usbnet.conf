#kate: syntax bash;
description "Makes me wanna claw my eyes off"
version "$Id: usbnet.conf 11141 2014-11-23 16:10:13Z NiLuJe $"

start on started volumd
stop on (stopping volumd or ota-update)

export LANG LC_ALL

pre-start script
	[ -f "/etc/upstart/functions" ] && source /etc/upstart/functions

	USBNET_BASEDIR="/mnt/us/usbnet"
	USBNET_BINDIR="${USBNET_BASEDIR}/bin"
	USBNET_EMERGENCY="${USBNET_BINDIR}/emergency.sh"
	USBNET_ENABLE="${USBNET_BASEDIR}/auto"
	USBNET_SCRIPT="${USBNET_BINDIR}/usbnetwork"
	USBNET_LINK_SCRIPT="${USBNET_BINDIR}/usbnet-link"

	KINDLE_PRIVDIR="/usr/local/bin"
	KINDLE_USBNETBIN="${KINDLE_PRIVDIR}/usbnetwork.sh"
	USBNET_USBNETBIN="${USBNET_BINDIR}/usbnetwork.sh"

	# And now, for the actual start action... (Did I mention that I hate upstart with a fiery passion?)
	# First things first, check for an emergency script
	if [ -f ${USBNET_EMERGENCY} ] ; then
		# We got one, make it executable and use it
		[ -x ${USBNET_EMERGENCY} ] || chmod +x ${USBNET_EMERGENCY}
		# Run it...
		${USBNET_EMERGENCY}
		# And GET OUT! NOW!
		return 0
	fi

	# If we have an outdated private command symlink, kill it...
	if [ -L ${KINDLE_USBNETBIN} ] ; then
		f_log W usbnet pre-start "" "deprecated usbnetwork command symlink found, removing it..."
		# Make sure the rootfs is writeable...
		mntroot rw
		rm -f ${KINDLE_USBNETBIN}
		mntroot ro
	fi

	# Make sure an update or diags didn't kill our private command script...
	if [ ! -f ${KINDLE_USBNETBIN} ] ; then
		f_log W usbnet pre-start "" "the usbnetwork command script was missing, creating it..."
		# Make sure the rootfs is writeable...
		mntroot rw
		# We of course need the directory first ;)
		if [ ! -d ${KINDLE_PRIVDIR} ] ; then
			f_log W usbnet pre-start "" "the ${KINDLE_PRIVDIR} directory was missing, creating it..."
			mkdir -p ${KINDLE_PRIVDIR}
		fi
		cp -f ${USBNET_USBNETBIN} ${KINDLE_USBNETBIN}
		chmod 0755 ${KINDLE_USBNETBIN}
		mntroot ro
	fi

	# If we requested custom MAC addresses, volumd is up, it should be okay to undo it now...
	if [ -f ${USBNET_LINK_SCRIPT} ] ; then
		# We got our script, and we want to use it, so, make it executable
		[ -x ${USBNET_LINK_SCRIPT} ] || chmod +x ${USBNET_LINK_SCRIPT}
		# And run it!
		${USBNET_LINK_SCRIPT} "unlink"
	else
		f_log W usbnet start "" "usbnet-link not found"
	fi
	# Everything's fine, yeepee.
	if [ -f ${USBNET_ENABLE} -a -f ${USBNET_SCRIPT} ] ; then
		# We got our script, and we want to use it, so, make it executable
		[ -x ${USBNET_SCRIPT} ] || chmod +x ${USBNET_SCRIPT}
		# And run it!
		${USBNET_SCRIPT}
	else
		f_log I usbnet start "" "usbnet is disabled"
	fi

	# Just in case... I hate upstart, and I don't want to hang the boot process...
	return 0
end script

post-stop script
	[ -f "/etc/upstart/functions" ] && source /etc/upstart/functions

	USBNET_BASEDIR="/mnt/us/usbnet"
	USBNET_BINDIR="${USBNET_BASEDIR}/bin"
	USBNET_SCRIPT="${USBNET_BINDIR}/usbnetwork"

	# Don't check for the enable trigger, we may have just removed it, or we may have switched to usbnet manually, and we still need to go back to usbms.
	if [ -f ${USBNET_SCRIPT} ] ; then
		# We got our script, and we want to use it, so, make it executable
		[ -x ${USBNET_SCRIPT} ] || chmod +x ${USBNET_SCRIPT}
		# And run it!
		${USBNET_SCRIPT} "usbms"
	else
		f_log I usbnet stop "" "couldn't stop usbnet"
	fi

	return 0
end script
